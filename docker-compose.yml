version: "3.7"
services:
    app:
        build:
            args:
                user: user
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - laravel

    db:
        image: mysql:8.0.22
        container_name: laravel-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./db_data:/var/lib/mysql
        networks:
            - laravel

    db-tests:
        image: mysql:8.0.22
        container_name: laravel-db-tests
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}_tests
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel

    phpmyadmin:
        depends_on:
            - db
        image: phpmyadmin/phpmyadmin:5
        restart: always
        ports:
            - "8081:80"
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        networks:
            - laravel

    nginx:
        image: nginx:1.19.5-alpine
        container_name: laravel-nginx
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - laravel

networks:
    laravel:
        driver: bridge